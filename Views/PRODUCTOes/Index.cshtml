@using PagedList.Mvc;

@model PagedList.IPagedList<QuitoText_1._0.Datos.PRODUCTO>



@{
    ViewBag.Title = "Index";
}

<h2>Lista De Productos</h2>


<p>
    @*@Html.ActionLink("Create New", "Create")*@
    <a href="/PRODUCTOes/Create" class="btn btn-success">Crear nuevo Producto</a>
</p>



<p>Cantidad de elementos por Página</p>
    @using (Html.BeginForm("Index", "PRODUCTOes", FormMethod.Get))
    {
        <p>
            <select name="PageSize" id="PageSize" class="form-control">
                <option @if ((int)ViewBag.PageSize == 5) { @Html.Raw("selected") } value="5"> 5</option>
                <option @if ((int)ViewBag.PageSize == 5) { @Html.Raw("selected") } value="10"> 10</option>
                <option @if ((int)ViewBag.PageSize == 5) { @Html.Raw("selected") } value="15"> 15</option>
            </select>
            <br />

            <input type="submit" value="Apply" class="btn btn-sm btn-primary" />
        </p>

    }
<table class="table">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.PRO_IMAGEN)*@
            Imagen
        </th>
        <th>
            @* @Html.DisplayNameFor(model => model.PRO_NOMBRE)*@
            Nombre
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.PRO_DESCRIPCION)*@
            Descripcion
        </th>
        <th>
            @* @Html.DisplayNameFor(model => model.PRO_PRECIO)*@
            Precio
        </th>
        <th>
            @* @Html.DisplayNameFor(model => model.PRO_STOCK)*@
            Stock
        </th>

        <!--<th>
            @*@Html.DisplayNameFor(model => model.PRO_IMAGEN2)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PRO_IMAGEN3)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PRO_IMAGEN4)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PRO_IMAGEN5)*@
        </th>-->
        <th>
            @* @Html.DisplayNameFor(model => model.CATEGORIA.CATE_NOMBRE)*@
            Categoria
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @*@Html.DisplayFor(modelItem => item.PRO_IMAGEN)*@
                <img width="100" src="@Url.Action("getImage","PRODUCTOes", new { id=item.PRO_ID})" />

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PRO_NOMBRE)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PRO_DESCRIPCION)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PRO_PRECIO)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PRO_STOCK)
            </td>

            <!--<td>
               @* @Html.DisplayFor(modelItem => item.PRO_IMAGEN2)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PRO_IMAGEN3)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PRO_IMAGEN4)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PRO_IMAGEN5)*@
            </td>-->
            <td>
                @Html.DisplayFor(modelItem => item.CATEGORIA.CATE_NOMBRE)
            </td>
            <td>
                @*@Html.ActionLink("Edit", "Edit", new { id = item.PRO_ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.PRO_ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.PRO_ID })*@

                <a href="/PRODUCTOes/Edit/@item.PRO_ID" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-pencil"></i></a>|
                <a href="/PRODUCTOes/Details/@item.PRO_ID" class="btn btn-success btn-sm"><i class="glyphicon glyphicon-tasks"></i></a>|
                <a href="/PRODUCTOes/Delete/@item.PRO_ID" class="btn btn-danger btn-sm"><i class="glyphicon glyphicon-trash"></i></a>
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount <Model.PageNumber?0: Model.PageNumber) of @Model.PageCount
    <br />
    Total Item Count @Model.TotalItemCount
    @Html.PagedListPager(Model, page => Url.Action("Index", "PRODUCTOes", new { page, pageSize = ViewBag.PageSize }))
